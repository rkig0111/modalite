# Generated by Django 5.1.2 on 2024-11-05 13:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Appareil",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=45, null=True)),
                ("divers", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "Appareil",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Appareiltype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=45, null=True)),
                ("divers", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "AppareilType",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Etablissement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=45, null=True)),
                ("divers", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "Etablissement",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Marque",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=30, null=True)),
                ("divers", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "Marque",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Net",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "addrip",
                    models.GenericIPAddressField(
                        blank=True, default="0.0.0.0", null=True
                    ),
                ),
                ("hostname", models.CharField(blank=True, max_length=30, null=True)),
                ("macaddr", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "masq",
                    models.CharField(
                        blank=True, default="255.255.255.0", max_length=20, null=True
                    ),
                ),
                (
                    "gw",
                    models.GenericIPAddressField(
                        blank=True, default="0.0.0.1", null=True
                    ),
                ),
                (
                    "dns1",
                    models.GenericIPAddressField(
                        blank=True, default="10.200.1.10", null=True
                    ),
                ),
                (
                    "dns2",
                    models.GenericIPAddressField(
                        blank=True, default="172.25.16.10", null=True
                    ),
                ),
                ("dhcp", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "Net",
                "ordering": ["addrip"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=45, null=True)),
                ("divers", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "Service",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Vlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num", models.IntegerField(blank=True, null=True, unique=True)),
                ("nom", models.CharField(blank=True, max_length=45, null=True)),
                ("divers", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "Vlan",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Pacs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=30, null=True)),
                ("aet", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "port",
                    models.IntegerField(
                        blank=True, help_text=" Port DICOM ", null=True
                    ),
                ),
                (
                    "net",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Réseau ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="net_pacs",
                        to="imagerie.net",
                    ),
                ),
            ],
            options={
                "db_table": "Pacs",
                "ordering": ["aet"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Printer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=30, null=True)),
                ("aet", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "port",
                    models.IntegerField(
                        blank=True, help_text=" Port DICOM ", null=True
                    ),
                ),
                (
                    "net",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Réseau ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="net_printer",
                        to="imagerie.net",
                    ),
                ),
            ],
            options={
                "db_table": "Printer",
                "ordering": ["aet"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=30, null=True)),
                ("aet", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "port",
                    models.IntegerField(
                        blank=True, help_text=" Port DICOM ", null=True
                    ),
                ),
                (
                    "net",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Réseau ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="net_store",
                        to="imagerie.net",
                    ),
                ),
            ],
            options={
                "db_table": "Store",
                "ordering": ["aet"],
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="net",
            name="vlan",
            field=models.ForeignKey(
                blank=True,
                help_text=" Vlan ",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="vlan_net",
                to="imagerie.vlan",
            ),
        ),
        migrations.CreateModel(
            name="Worklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=30, null=True)),
                ("aet", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "port",
                    models.IntegerField(
                        blank=True, help_text=" Port DICOM ", null=True
                    ),
                ),
                (
                    "net",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Réseau ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="net_worklist",
                        to="imagerie.net",
                    ),
                ),
            ],
            options={
                "db_table": "Worklist",
                "ordering": ["aet"],
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Modalite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(blank=True, max_length=30, null=True)),
                ("aet", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "port",
                    models.IntegerField(
                        blank=True, help_text=" Port DICOM ", null=True
                    ),
                ),
                (
                    "net",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Réseau ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="net_modalite",
                        to="imagerie.net",
                    ),
                ),
                (
                    "pacs",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Pacs ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pacs_modalite",
                        to="imagerie.pacs",
                    ),
                ),
                (
                    "printer",
                    models.ManyToManyField(
                        blank=True,
                        help_text=" différents PRINT où l'on peut imprimer les examens",
                        related_name="printer_modalite",
                        to="imagerie.printer",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Service ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="service_modalite",
                        to="imagerie.service",
                    ),
                ),
                (
                    "store",
                    models.ManyToManyField(
                        blank=True,
                        help_text=" différents STORE où l'on peut pousser les examens",
                        related_name="store_modalite",
                        to="imagerie.store",
                    ),
                ),
                (
                    "worklist",
                    models.ForeignKey(
                        blank=True,
                        help_text=" Worklist ",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="worklist_modalite",
                        to="imagerie.worklist",
                    ),
                ),
            ],
            options={
                "db_table": "Modalite",
                "ordering": ["aet"],
                "managed": True,
            },
        ),
    ]
